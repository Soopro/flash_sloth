// Generated by CoffeeScript 1.10.0
(function() {
  angular.module('boltApp').controller("promoAgentCtrl", [
    '$scope', '$routeParams', '$filter', '$location', 'restCrm', 'flash', 'ConfigCrm', 'fsv', 'g', function($scope, $routeParams, $filter, $location, restCrm, flash, ConfigCrm, fsv, g) {
      var agent_life, check_badrequest, create, get_endtime, process_code, promo_sid, reset_create_count;
      promo_sid = $routeParams.promo_sid;
      agent_life = $routeParams.agent_life;
      $scope.forms = {};
      $scope.input = {
        code: '',
        count: 1
      };
      $scope.codes = [];
      $scope.pin = null;
      $scope.activated = false;
      $scope.promo_types = ConfigCrm.promo_types;
      $scope.agent_deadline = (function() {
        var deadline;
        if (!agent_life) {
          return '????';
        }
        deadline = $filter('dateformat')(agent_life * 1000, 'yyyy-MM-dd H:mm');
        return deadline;
      })();
      $scope.promo_code = {};
      $scope.promo_profile = new restCrm.promocode({
        sid: promo_sid
      });
      get_endtime = function(remain) {
        var endtime;
        if (remain) {
          endtime = $filter('dateformat')(Date.now() + remain * 1000, 'yyyy-MM-dd H:mm');
        } else {
          endtime = null;
        }
        return endtime;
      };
      process_code = function(code) {
        return code;
      };
      check_badrequest = function(error) {
        if (!error) {
          return false;
        }
        if (error.status === 403) {
          $location.path('/403');
          return true;
        } else {
          return false;
        }
      };
      $scope.activate = function() {
        $scope.promo_profile.pin = $scope.pin;
        return $scope.promo_profile.$get().then(function(data) {
          $scope.promo_profile.endtime = get_endtime(data.remain);
          return $scope.activated = true;
        })["catch"](function(error) {
          return check_badrequest(error);
        });
      };
      $scope.reset = function() {
        var k, ref, results, v;
        $scope.promo_code = {};
        $scope.input = {};
        ref = $scope.forms;
        results = [];
        for (k in ref) {
          v = ref[k];
          v.$setPristine();
          results.push(v.$setUntouched());
        }
        return results;
      };
      $scope.get = function() {
        if (!fsv($scope.forms.get_form, 'code')) {
          return;
        }
        $scope.promo_code = new restCrm.promocode({
          code: process_code($scope.input.code),
          sid: promo_sid,
          pin: $scope.pin
        });
        return $scope.promo_code.$get().then(function(data) {
          $scope.promo_profile.endtime = get_endtime(data.remain);
          $scope.promo_profile.count = data.count;
          return $scope.promo_profile.common = data.common;
        })["catch"](function(error) {
          check_badrequest(error);
          return $scope.promo_code._error = true;
        });
      };
      $scope.use = function() {
        if (!fsv($scope.forms.use_form, 'code')) {
          return;
        }
        $scope.promo_code = new restCrm.promocode({
          code: process_code($scope.input.code),
          sid: promo_sid,
          pin: $scope.pin
        });
        return $scope.promo_code.$use().then(function(data) {
          $scope.promo_profile.endtime = get_endtime(data.remain);
          $scope.promo_profile.count = data.count;
          $scope.promo_profile.common = data.common;
          return flash('Promo code has been used.');
        })["catch"](function(error) {
          check_badrequest(error);
          return $scope.promo_code._error = true;
        });
      };
      reset_create_count = function() {
        return $scope.input.count = 1;
      };
      $scope.$watch('input.count', function(val) {
        var min;
        if ($scope.promo_profile.amount !== null) {
          min = Math.min($scope.promo_profile.amount, val);
          return $scope.input.count = min;
        }
      });
      $scope.batch_create = function(create_count, retry) {
        var amount;
        amount = $scope.promo_profile.amount;
        if (amount !== null) {
          create_count = Math.min(amount, create_count);
        }
        if (create_count <= 0) {
          return;
        }
        if (retry === void 0) {
          retry = 0;
        }
        create(create_count, retry).then(function() {
          create_count -= 1;
          if (create_count > 0) {
            return $scope.batch_create(create_count, retry);
          } else {
            reset_create_count();
            return flash('Promo codes have been created.');
          }
        })["catch"](function(error) {
          if (error && retry < 1 && !check_badrequest(error)) {
            console.log('retry:', retry);
            retry += 1;
            return $scope.batch_create(create_count, retry);
          }
        });
      };
      return create = function() {
        var new_promocode;
        new_promocode = new restCrm.promocode({
          sid: promo_sid,
          pin: $scope.pin
        });
        return new_promocode.$create().then(function(data) {
          $scope.promo_profile.endtime = get_endtime(data.remain);
          $scope.promo_profile.count = data.count;
          $scope.promo_profile.common = data.common;
          $scope.promo_profile.amount = data.amount;
          return $scope.codes.push(data);
        });
      };
    }
  ]);

}).call(this);
